services:
  # Laravel Application (this runs PHP-FPM)
  laravel_app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - ./backend/vendor:/var/www/html/vendor
      - ./backend/storage:/var/www/html/storage
    networks:
      - app-network
    depends_on:
      - mysql_db

  # MySQL Database
  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: stock_db
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  # Nginx to serve Laravel
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - laravel_app
    networks:
      - app-network

  # PHPMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql_db
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      - mysql_db
    networks:
      - app-network

  # Laravel Queue Worker (Auto-Restart)
  laravel_queue:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - ./backend/vendor:/var/www/html/vendor
      - ./backend/storage:/var/www/html/storage
    command: >
      sh -c '
        echo "ðŸ”„ Waiting for MySQL..."
        while ! nc -z mysql_db 3306; do sleep 2; done
        echo "âœ… MySQL is ready! Starting queue workers..."
        
        echo "ðŸš€ Starting notification queue worker..."
        php artisan queue:work database --queue=notifications --timeout=60 --sleep=3 --tries=3 --max-jobs=1000 --verbose &
        
        echo "ðŸš€ Starting default queue worker..."
        php artisan queue:work database --queue=default --timeout=60 --sleep=3 --tries=3 --max-jobs=1000 --verbose &
        
        echo "âœ… Both queue workers started successfully!"
        echo "ðŸ“Š Queue workers will automatically restart every 1000 jobs or 1 hour"
        
        # Keep the container alive
        wait
      '
    depends_on:
      - mysql_db
      - laravel_app
    networks:
      - app-network
    environment:
      - CONTAINER_ROLE=queue
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'queue:work' > /dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend
  react_app:
    image: node:20-alpine
    container_name: react_app
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    command: sh -c "npm install && npm run dev -- --host"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data: